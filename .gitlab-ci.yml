variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: "/certs"
    MYSQL_ROOT_PASSWORD: app
    MYSQL_USER: app
    MYSQL_PASSWORD: app
    MYSQL_DATABASE: shopware
    GIT_STRATEGY: clone
    GIT_DEPTH: 1
    ARTIFACTS_ROOT: "$CI_PROJECT_DIR/build/artifacts"
    DB_USER: "app"
    DB_PASSWORD: "app"
    DB_HOST: "mysql"
    DB_PORT: 3306
    DB_NAME: shopware
    SW_HOST: "localhost"
    SW_BASE_PATH: ""
    ELASTICSEARCH_HOST: elasticsearch

# Include the default gitlab rules template for "MergeRequest-Pipelines".
# This makes pipelines run for the default branch, tags, and all types of merge
# request pipelines.
# @see https://docs.gitlab.com/ee/ci/yaml/workflow.html#workflowrules-templates
include:
    - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

.composer-cache: &composer-cache
    key:
        files:
            - 'composer.lock'
#            - 'recovery/common/composer.lock' TODO - SW-26745: Needs to be considered again, but GitLab only allows two files
            - 'vendor-bin/cs-fixer/composer.lock'
    paths:
        - 'vendor/'
        - 'recovery/common/vendor/'
        - 'vendor-bin/'
        - '.htaccess'
        - '.make.install.composer-dependencies'
    policy: pull-push

.npm-cache: &npm-cache
    key:
        files:
            - 'themes/package-lock.json'
            - 'themes/Frontend/Responsive/package-lock.json'
    paths:
        - 'themes/node_modules/'
        - 'themes/Frontend/Responsive/node_modules/'
        - '.make.install.npm-dependencies'
    policy: pull-push

stages:
    - Prepare Files
    - Static analysis
    - PHPUnit
    - End-to-end testing
    - Build Image

default:
    image: gitlab.shopware.com:5005/shopware/5/product/image/continuous:7.4

# Stage: Prepare Files

Install Required PHP Files:
    tags:
        - t3.nano
    stage: Prepare Files
    script:
        - make .make.install.composer-dependencies
    cache:
        <<: *composer-cache

Install Required JS Files:
    tags:
        - t3.nano
    image: node:alpine
    stage: Prepare Files
    before_script:
        - apk add --no-cache make bash
    script:
        - make .make.install.npm-dependencies
    cache:
        <<: *npm-cache

PHP analyze:
    tags:
        - m5.large
    cache:
        - <<: *composer-cache
          policy: pull
    stage: Static analysis
    before_script:
        - make init
    script:
        - make check-code
    services:
        -   name: mysql:5.7
            alias: mysql

JavaScript checks:
    tags:
        - t3.nano
    cache:
        - <<: *npm-cache
          policy: pull
    stage: Static analysis
    image: node:alpine
    before_script:
        - apk add bash make
    script:
        - make check-js-code
        - make test-jest

.phpunit_base:
    tags:
        - t3.medium
    cache:
        - <<: *composer-cache
          policy: pull
    before_script: # TODO: (SW-26726) Remove this and see if anything breaks.
        - sed -i -e "s;__ROOT__;$CI_PROJECT_DIR;g" /etc/nginx/sites-enabled/shopware.conf
        - /usr/bin/supervisord -c /etc/supervisord.conf &>/dev/null &
        # https://gitlab.com/gitlab-org/gitlab-foss/-/issues/27921#note_38132416
        - eval export DB_USER DB_PASSWORD DB_HOST DB_PORT DB_NAME SW_HOST SW_BASE_PATH ELASTICSEARCH_HOST
    stage: PHPUnit
    services:
        -   name: mysql:5.7
            alias: mysql
    script:
        - make test-phpunit
    artifacts:
        expire_in: 1 week
        reports:
            junit: ${ARTIFACTS_ROOT}/test-log.xml

.phpunit_es_base:
    tags:
        - t3.medium
    extends: .phpunit_base
    script:
        - make init
        - make test-phpunit-elasticsearch

    artifacts:
        expire_in: 1 week
        reports:
            junit: ${ARTIFACTS_ROOT}/test-log.xml

Code Coverage:
    extends: .phpunit_base
    image: gitlab.shopware.com:5005/shopware/5/product/image/continuous:8.0
    script:
        - make test-phpunit-coverage-cobertura
    artifacts:
        paths:
            - ${ARTIFACTS_ROOT}/*
        expire_in: 1 week
        reports:
            coverage_report:
                coverage_format: cobertura
                path: ${ARTIFACTS_ROOT}/*.cobertura.xml
    parallel:
        matrix:
            - TESTSUITE: ['unit', 'functional']

Code Coverage Statistic:
    extends: .phpunit_base
    image: gitlab.shopware.com:5005/shopware/5/product/image/continuous:8.0
    variables:
        TESTSUITE: 'all'
    script:
        - make test-phpunit-coverage-statistic | sed -E -n '1,/^\s*Lines:\s*([0-9]+(\.[0-9]+)?)%/ p' # See: https://gitlab.shopware.com/shopware/6/product/platform/-/blob/trunk/.gitlab/stages/02-unit.yml#L92
    coverage: '/^\s*Lines:\s*(\d+(?:\.\d+)?%)/'

PHP 7.4:
    extends: .phpunit_base

PHP 8.1:
    extends: .phpunit_base
    image: gitlab.shopware.com:5005/shopware/5/product/image/continuous:8.1

PHP 8.2:
    allow_failure: true
    extends: .phpunit_base
    image: gitlab.shopware.com:5005/shopware/5/product/image/continuous:8.2.0alpha2

MySQL 8.0:
    extends: .phpunit_base
    services:
        -   name: mysql:8.0
            alias: mysql
            command: [ "mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--default-authentication-plugin=mysql_native_password", "--sql-require-primary-key=ON" ]

MariaDB 10.1:
    extends: .phpunit_base
    services:
        -   name: mariadb:10.1
            alias: mysql

MariaDB 10.4:
    extends: .phpunit_base
    services:
        -   name: mariadb:10.4
            alias: mysql

MariaDB 10.5:
    extends: .phpunit_base
    services:
        -   name: mariadb:10.5
            alias: mysql

Elasticsearch 7:
    extends: .phpunit_es_base
    image: gitlab.shopware.com:5005/shopware/5/product/image/continuous:7.4
    services:
        -   name: mysql:8.0
            alias: mysql
            command: [ "mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--default-authentication-plugin=mysql_native_password" ]
        -   name: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
            alias: elasticsearch
            command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]

.mink_base:
    tags:
        - m5.large
    extends: .phpunit_base
    stage: End-to-end testing
    artifacts:
        when: always
        expire_in: 1 week
        paths:
            - ${ARTIFACTS_ROOT}/**
            - build/logs/**
        reports:
            junit: ${ARTIFACTS_ROOT}/mink/*.xml
    script:
        - apk add --no-cache sudo
        - export SW_HOST=$(hostname -i)
        - make init
        - make prepare-mink
        - chown -R www-data:www-data .
        - sudo -E -u www-data vendor/bin/behat -vv --config=tests/Mink/behat.yml --format=pretty --out=std --format=junit --out=${ARTIFACTS_ROOT}/mink --tags ${MINK_TAG}
    services:
        -   name: selenium/standalone-chrome:84.0
            alias: selenium
        -   name: mailhog/mailhog
            alias: smtp
        -   name: mysql:8.0
            alias: mysql
            command: [ "mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--default-authentication-plugin=mysql_native_password" ]

Mink:
    extends: .mink_base
    image: "gitlab.shopware.com:5005/shopware/5/product/image/continuous:$IMAGE_TAG"
    parallel:
      matrix:
        - IMAGE_TAG: [ '7.4', '8.0' ]
          MINK_TAG: [ 'account', 'checkout1', 'checkout2', 'detail', 'listing', 'note', 'sitemap', 'misc', 'backend' ]
    rules:
        - if: '$CI_PIPELINE_SOURCE == "schedule"'
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $IMAGE_TAG != "8.0"'
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
          when: manual
          allow_failure: true

Build Image:
    stage: Build Image
    inherit:
        variables: false
    variables:
        UPSTREAM_REF_NAME: '$CI_COMMIT_REF_NAME'
        UPSTREAM_COMMIT_SHA: '$CI_COMMIT_SHORT_SHA'
        UPSTREAM_CI_COMMIT_REF_PROTECTED: '$CI_COMMIT_REF_PROTECTED'
        PHP_VERSION: '8.0'
        COMPOSER_VERSION: '2'
        NODE_VERSION: '18'
    trigger:
        project: shopware/5/product/image
        branch: master
    rules:
       - if: '$CI_COMMIT_REF_PROTECTED == "true"'
