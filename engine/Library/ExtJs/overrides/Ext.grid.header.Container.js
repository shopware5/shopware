/**
 * Shopware 5
 * Copyright (c) shopware AG
 *
 * According to our licensing model, this program can be used
 * under the terms of the GNU Affero General Public License, version 3.
 *
 * The texts of the GNU Affero General Public License with an additional
 * permission can be found at and in the LICENSE file you have received
 * along with this program.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * "Shopware" is a registered trademark of shopware AG.
 * The licensing of the program under the AGPLv3 does not imply a
 * trademark license. Therefore, any rights, title and interest in
 * our trademarks remain entirely with the shopware AG.
 */

/** @lends Ext.grid.header.Container# */
//{block name="extjs/overrides/container"}
Ext.override(Ext.grid.header.Container, {
    /**
     * Maps the record data to base it on the header id's.
     * This correlates to the markup/template generated by
     * TableChunker.
     */
    prepareData: function(data, rowIdx, record, view, panel) {
        var me = this,
            obj = {},
            headers = me.gridDataColumns || me.getGridColumns(),
            headersLn = headers.length,
            colIdx = 0,
            header,
            headerId,
            renderer,
            value,
            metaData,
            allowHtml,
            store = panel.store;

        for (; colIdx < headersLn; colIdx++) {
            metaData = {
                tdCls: '',
                style: ''
            };
            header = headers[colIdx];
            headerId = header.id;
            renderer = header.renderer;
            allowHtml = header.allowHtml || false;
            value = data[header.dataIndex];

            /**
             * Automatic escaping of the value before we're calling the actual
             * cell renderer. To allow the output of unescaped html, use the
             * option `allowHtml` and set it to true.
             */
            if (allowHtml !== true && typeof value === 'string') {
                value = Ext.String.getText(value);
            }

            if (typeof renderer == 'function') {
                value = renderer.call(
                    header.scope || me.ownerCt,
                    value,
                    // metadata per cell passing an obj by reference so that
                    // it can be manipulated inside the renderer
                    metaData,
                    record,
                    rowIdx,
                    colIdx,
                    store,
                    view
                );
            }

            if (me.markDirty) {
                obj[headerId + '-modified'] = record.isModified(header.dataIndex) ? Ext.baseCSSPrefix + 'grid-dirty-cell' : '';
            }
            obj[headerId + '-tdCls'] = metaData.tdCls;
            obj[headerId + '-tdAttr'] = metaData.tdAttr;
            obj[headerId + '-style'] = metaData.style;
            if (typeof value === 'undefined' || value === null || value === '') {
                value = header.emptyCellText;
            }
            obj[headerId] = value;
        }
        return obj;
    }
});
//{/block}
